<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="100%" height="100%" 
		   backgroundColor="#332F26" >
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import com.suda.plugins.*;
			import com.suda.AS3BlipLib.objects.*;
			
			public var videoId:String;
			public var videoT:String;
			public var flvURL:String;
			
			private var pluginHost:PluginHost;
			private var linkColor:String = '#777777';
			
			private var service:HTTPService = new HTTPService();
			
			public function init(pluginHost:PluginHost):Boolean {
				this.pluginHost = pluginHost;
				
				this.pluginHost.addEventListener('onPluginRenderStatus', renderStatus, false, 3);
					
				this.service.addEventListener(ResultEvent.RESULT, onGetDetails);
				this.service.method = 'GET';
				this.service.resultFormat = 'xml';
				
				return true;
			}
			
			public function exec(func:String, params:Array):void {
				if ('yt' == func) {
					loadYouTube(params.pop());
					
				}
			}
			
			public function onClosing(event:Event):void {
				vdPlayer.stop();	
			}
			
			
			
			public function renderStatus(event:PluginEvent):void {
				if (event.data is BlipLog) {
					for each (var item in event.data) {
						var out:String = item.body;
						//trace(out);
						//out = out.replace(new RegExp('((http\:\/\/)*(\w+\.)*(youtube\.(.*)v\=([a-zA-Z0-9\-\_]*)(\&.*)*))', 'g'),
						/*
						out = out.replace(new RegExp('((http\:\/\/)*(\w+\.)*youtube\.com\/watch\?v=([A-Za-z0-9._%-]*)[&\w;=\+_\-]*)', 'gi'),
										  '<a href="event:VideoPlayer.yt(true, \'$4\')"><font color="'+linkColor+
										  '"><b>[YouTube]</b></font></a>');					
						*/
						item.body = out.replace(/((http\:\/\/)*(\w+\.)*youtube\.com\/watch\?v=([A-Za-z0-9._%-]*)[&\w;=\+_\-]*)/g, 
												'<a href="event:VideoPlayer.yt(true, \'$4\')"><font color="'+linkColor+
												'"><b>[YouTube]</b></font></a>');

					}
				}	
			}
			
			public function loadYouTube(id:String):void {
				this.videoId = id;
				getTVar();
				
				
				this.service.url = "http://gdata.youtube.com/feeds/api/videos/" + this.videoId;
				this.service.send();				 						
			}
			
			private function getTVar():void
			{
				var req:URLRequest = new URLRequest ("http://www.youtube.com/v/"+ this.videoId);
				var loader:Loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.INIT, onLoaderInit);
				loader.load(req);
			}
			
			private function onLoaderInit (event:Event):void			
			{
				var loaderInfo:* = event.target;
				var urlVars:URLVariables = new URLVariables ();
				urlVars.decode (loaderInfo.url.split("?")[1]);
				var flvURL:String = "http://www.youtube.com/get_video.php?" +
						            "video_id=" + urlVars.video_id +
						    	    "&amp;t=" + urlVars.t; 

				this.flvURL = flvURL;
				vdPlayer.source = flvURL;
				vdPlayer.load();
				
				btnPlayPause.enabled = true;
				btnStop.enabled = true;				
			}
			
			private function onGetDetails(event:ResultEvent):void {
				var info:XMLNode = event.result as XMLNode;
				var mediaNode:XMLNode = getNodeByName(info, 'media:group');
				var mediaTitleNode:XMLNode = getNodeByName(mediaNode, 'media:title');
				
				this.parentApplication.title = 'Odtwarzacz wideo - ' + mediaTitleNode.firstChild.toString();				
			}
			
			private function getNodeByName(nodes:XMLNode, name:String):XMLNode {
				for each (var node:XMLNode in nodes.childNodes) {
					if (name == node.nodeName) {
						return node;
					}
				}
				return null;
			}
			
			private function formatTime(time:Number):String {
				var formatedStr:String = '';
				
				if (time >= (60*60)) {
					// >= Hour gives H:M:SS
				} else {
					// M:SS
					var minutes:Number = Math.floor(time / 60);
					var seconds:Number = Math.floor(time - (minutes * 60));
					
					formatedStr = minutes.toString()+':';
					
					if (seconds < 10) {
						formatedStr += '0';
					}
					
					formatedStr += seconds.toString();
				}
				
				return formatedStr;
			}
		]]>
	</mx:Script>
	<mx:VideoDisplay left="0" right="0" top="0" bottom="34" autoPlay="false" id="vdPlayer" autoBandWidthDetection="true" live="true">
		<mx:playheadUpdate>
			<![CDATA[
				pbProgress.setProgress(vdPlayer.playheadTime, vdPlayer.totalTime);
				lblTime.text = formatTime(event.playheadTime) + ' / ' + formatTime(vdPlayer.totalTime);	
				
				//trace(event.state);			
			]]>
		</mx:playheadUpdate>
		<mx:progress>
			<![CDATA[
				pbLoading.setProgress(event.bytesLoaded, event.bytesTotal);	
			]]>
		</mx:progress>
		<mx:metadataReceived>
			<![CDATA[
				pbProgress.mouseEnabled = true;
				lblTime.text = formatTime(vdPlayer.playheadTime) + ' / ' + formatTime(vdPlayer.totalTime);	
			]]>
		</mx:metadataReceived>
	</mx:VideoDisplay>
	<mx:Button icon="@Embed(source='assets/play.png')" selectedUpIcon="@Embed(source='assets/pause.png')" 
			   selectedOverIcon="@Embed(source='assets/pause.png')" enabled="false" 
			   styleName="greyButton" height="20" width="30" left="6" bottom="6" id="btnPlayPause">
		<mx:click>
			<![CDATA[
				if ('' != vdPlayer.source) {
					if (!btnPlayPause.selected) {
						vdPlayer.play();
					} else {
						vdPlayer.pause();
					}
					
					btnPlayPause.selected = !btnPlayPause.selected;
				}
			]]>
		</mx:click>
	</mx:Button>
	<mx:Button icon="@Embed(source='assets/stop.png')" styleName="greyButton" height="20" width="30" left="42" bottom="6"
			   id="btnStop" enabled="false">
		<mx:click>
			<![CDATA[
				vdPlayer.stop();
				btnPlayPause.selected = false;
			]]>
		</mx:click>
	</mx:Button>
	<!--<mx:HSlider bottom="6" left="78" right="100" height="20"/>-->
	<mx:ProgressBar id="pbLoading" bottom="6" left="80" right="100" height="20" mode="manual" label="" barColor="#332F26" />
	<mx:ProgressBar id="pbProgress" bottom="6" left="80" right="100" height="20" mode="manual" label=""
		 trackSkin="@Embed(source='assets/transparent.png')" mouseEnabled="false">
		<mx:mouseDown>
			<![CDATA[
				if (pbProgress.mouseEnabled) {					
					var playheadTime:Number = ((event.localX) * vdPlayer.totalTime) / (pbProgress.width-2);
					/*  
					if (pbLoading.percentComplete + 5 > Math.floor((playheadTime * 100) / vdPlayer.totalTime)) {   
						vdPlayer.playheadTime = playheadTime;					
					}
					 */
					//if (100 == pbLoading.percentComplete) {
						vdPlayer.playheadTime = playheadTime;
					//}
					 
				}	
			]]>
		</mx:mouseDown>
	</mx:ProgressBar>
	<mx:Label id="lblTime" bottom="6" right="6" text="0:00 / 0:00" color="#ffffff" />
</mx:Module>
